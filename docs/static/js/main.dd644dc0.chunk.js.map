{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchedGifs.js","components/GifGridItem.js","components/GifGrid.js","components/GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifData","map","gif","id","title","images","fixed_height","useFetchedGifs","loading","state","setState","useEffect","then","gifs","GifGridItem","className","src","alt","GifGrid","key","GifExpert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACHC,mBAAS,IADN,mBAChCC,EADgC,KACpBC,EADoB,KAavC,OACI,0BAAMC,SAVW,SAAAC,GACjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,QAAU,IAC5BR,GAAc,SAAAS,GAAU,OAAKP,EAAWK,QAAhB,mBAA2BE,OACnDN,EAAc,OAMd,2BACIO,KAAK,OACLC,YAAY,mBACZC,MAAOV,EACPW,SAhBS,SAAAR,GAAC,OAAIF,EAAcE,EAAES,OAAOF,Y,uBCYtCG,EAlBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNC,EACF,iDAA0CC,UAAUH,IAApD,qDAFQ,SAIWI,MAAMF,GAJjB,cAING,EAJM,gBAKWA,EAASC,OALpB,uBAKJC,EALI,EAKJA,KAEFC,EAAUD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC5B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,aAAaZ,QAX1B,kBAeLM,GAfK,4CAAH,sDCqBEO,EAlBQ,SAAAf,GAAa,IAAD,EACLf,mBAAS,CAC/BsB,KAAM,GACNS,SAAS,IAHkB,mBACxBC,EADwB,KACjBC,EADiB,KAe/B,OATAC,qBAAU,WACNpB,EAAQC,GAAUoB,MAAK,SAAAC,GACnBH,EAAS,CACLX,KAAMc,EACNL,SAAS,SAGlB,CAAChB,IAEGiB,GCPIK,EATK,SAAC,GAAoB,IAAlBV,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC1B,OACI,yBAAKqB,UAAU,6CACX,yBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,uBAAGW,UAAU,cAAcX,KCkBxBc,EApBC,SAAC,GAAkB,IAAhB1B,EAAe,EAAfA,SAAe,EACEe,EAAef,GAAjCqB,EADgB,EACtBd,KAAYS,EADU,EACVA,QAEpB,OACI,yBAAKO,UAAU,aACVP,GACG,uBAAGO,UAAU,oCAAb,iBAIJ,wBAAIA,UAAU,sDACTvB,GAEJqB,EAAKZ,KAAI,SAAAC,GAAG,OACT,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,SCG/BkB,EAhBG,WAAO,IAAD,EACgB3C,mBAAS,IADzB,mBACbQ,EADa,KACDT,EADC,KAGpB,OACI,oCACI,0CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAECS,EAAWgB,KAAI,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,S,MCRlD6B,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,U","file":"static/js/main.dd644dc0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleChange = e => setInputValue(e.target.value);\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length >= 1) {\r\n            setCategories(categories => [inputValue.trim(), ...categories]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Search for a GIF\"\r\n                value={inputValue}\r\n                onChange={handleChange}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const getGifs = async category => {\r\n    const url =\r\n        `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}` +\r\n        `&limit=10&api_key=jFlqPHAKYLo2S7UKLQKOlXK7w4sLTFPK`;\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n    const gifData = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.fixed_height.url,\r\n        };\r\n    });\r\n\r\n    return gifData;\r\n};\r\n\r\nexport default getGifs;\r\n","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchedGifs = category => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(gifs => {\r\n            setState({\r\n                data: gifs,\r\n                loading: false,\r\n            });\r\n        });\r\n    }, [category]);\r\n\r\n    return state;\r\n};\r\n\r\nexport default useFetchedGifs;\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__slideInUp\">\r\n            <img src={url} alt={title} />\r\n            <p className=\"card-title\">{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport useFetchedGifs from '../hooks/useFetchedGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n    const { data: gifs, loading } = useFetchedGifs(category);\r\n\r\n    return (\r\n        <div className=\"card-grid\">\r\n            {loading && (\r\n                <p className=\"animate__animated animate__flash\">\r\n                    Loading . . .\r\n                </p>\r\n            )}\r\n            <h2 className=\"card-category animate__animated animate__slideInUp\">\r\n                {category}\r\n            </h2>\r\n            {gifs.map(gif => (\r\n                <GifGridItem key={gif.id} {...gif} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\n\r\nimport AddCategory from './AddCategory';\r\nimport GifGrid from './GifGrid';\r\n\r\nconst GifExpert = () => {\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    return (\r\n        <>\r\n            <h1>GIF Expert</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            {categories.map(category => (\r\n                <GifGrid key={category} category={category} />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifExpert;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpert from './components/GifExpert';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <GifExpert />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}